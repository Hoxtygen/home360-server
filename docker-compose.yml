version: "3.8"

services:
  postgres:
    image: postgres:15-alpine
    container_name: home360-postgres
    restart: unless-stopped
    ports:
      - "5432:5432"
    volumes:
      - db:/var/lib/postgres
    env_file: .env
    environment:
      - POSTGRES_USER:${POSTGRES_USER}
      - POSTGRES_PASSWORD:${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DATABASE}

  mongo:
    image: mongo
    container_name: home360-mongodb
    restart: unless-stopped
    ports:
      - "27017:27017"
    env_file: .env
    environment:
      - MONGO_INITDB_DATABASE= admin
      - MONGO_INITDB_ROOT_USERNAME:${MONGODB_USER}
      - MONGO_INITDB_ROOT_PASSWORD:${MONGODB_PASSWORD}
    volumes:
      - db:/data/db

  app:
    build:
      context: .
      dockerfile: Dockerfile
    depends_on:
      - postgres
      - mongo
    restart: on-failure
    container_name: home360-server
    env_file: .env
    ports:
      - ${SPRING_LOCAL_PORT}:${SPRING_DOCKER_PORT}
    environment:
      SPRING_PROFILES_ACTIVE: docker
      SPRING_APPLICATION_JSON: '{
                   "spring.datasource.url"  : "jdbc:postgresql://postgres:$POSTGRES_DOCKER_PORT/$POSTGRES_DATABASE",
                   "spring.datasource.username" : "$POSTGRES_USER",
                   "spring.datasource.password" : "$POSTGRES_PASSWORD",
                   "spring.jpa.properties.hibernate.dialect" : "org.hibernate.dialect.PostgreSQLDialect",
                   "spring.jpa.hibernate.ddl-auto" : "create-drop"
                 }'

    stdin_open: true
    tty: true
    volumes:
      - .m2:/root/.m2

volumes:
  db:


